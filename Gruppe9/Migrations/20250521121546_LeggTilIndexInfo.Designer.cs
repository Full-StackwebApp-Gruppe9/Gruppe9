// <auto-generated />
using System;
using Gruppe9.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gruppe9.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250521121546_LeggTilIndexInfo")]
    partial class LeggTilIndexInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Gruppe9.Models.ColorInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Blue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Green")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Red")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ColorInfo");
                });

            modelBuilder.Entity("Gruppe9.Models.DateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DateInfo");
                });

            modelBuilder.Entity("Gruppe9.Models.IndexInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ColorInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IndexDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ColorInfoId");

                    b.ToTable("IndexInfo");
                });

            modelBuilder.Entity("Gruppe9.Models.PlantInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlanteType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColorInfoId");

                    b.ToTable("PlantInfo");
                });

            modelBuilder.Entity("Gruppe9.Models.PollenRegistrering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeOfPollen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PollenRegistrering");
                });

            modelBuilder.Entity("Gruppe9.Models.PollenResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DateInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlantInfoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DateInfoId");

                    b.HasIndex("PlantInfoId");

                    b.ToTable("PollenResponse");
                });

            modelBuilder.Entity("Gruppe9.Models.IndexInfo", b =>
                {
                    b.HasOne("Gruppe9.Models.ColorInfo", "ColorInfo")
                        .WithMany()
                        .HasForeignKey("ColorInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColorInfo");
                });

            modelBuilder.Entity("Gruppe9.Models.PlantInfo", b =>
                {
                    b.HasOne("Gruppe9.Models.ColorInfo", "ColorInfo")
                        .WithMany()
                        .HasForeignKey("ColorInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColorInfo");
                });

            modelBuilder.Entity("Gruppe9.Models.PollenResponse", b =>
                {
                    b.HasOne("Gruppe9.Models.DateInfo", "DateInfo")
                        .WithMany("PollenResponses")
                        .HasForeignKey("DateInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gruppe9.Models.PlantInfo", "PlantInfo")
                        .WithMany("PollenResponses")
                        .HasForeignKey("PlantInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DateInfo");

                    b.Navigation("PlantInfo");
                });

            modelBuilder.Entity("Gruppe9.Models.DateInfo", b =>
                {
                    b.Navigation("PollenResponses");
                });

            modelBuilder.Entity("Gruppe9.Models.PlantInfo", b =>
                {
                    b.Navigation("PollenResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
